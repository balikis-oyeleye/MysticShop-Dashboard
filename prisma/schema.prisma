// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Define the Seller model
model Seller {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String?
  email     String?  @unique
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products    Product[]
  orders      Order[]
  transaction Transaction[]
}

model Customer {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String?
  email     String?  @unique
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders   Order[]
  wishlist Wishlist[]
}

// Define the Product model
model Product {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  category    String
  description String
  price       Float
  quantity    Int
  status      String
  imageUrl    String
  sellerId    String @db.ObjectId
  seller      Seller @relation(fields: [sellerId], references: [id], onDelete: Cascade)
}

// Define the Order model
model Order {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  orderDate   DateTime
  totalAmount Float
  status      String
  address     String
  sellerId    String    @db.ObjectId
  seller      Seller    @relation(fields: [sellerId], references: [id], onDelete: Cascade)
  Customer    Customer? @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId  String?   @db.ObjectId
}

// Define the Transaction model
model Transaction {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  amount Float
  date   DateTime

  seller   Seller @relation(fields: [sellerId], references: [id], onDelete: Cascade)
  sellerId String @db.ObjectId
}

model Wishlist {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  customerId String   @db.ObjectId
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
}
